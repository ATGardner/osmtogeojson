#!/usr/bin/env node

var osmtogeojson = require('./'),
    opt = require('optimist')
        .usage('Usage: $0 [-f format] [-e] FILE')
        .string('f').describe('f', 'file format. if not given, will be detected by filename. supported values: osm, json')
        .boolean('e').describe('e', 'enhanced properties. if set, the resulting GeoJSON feature\'s properties will contain more structured information'),
    argv = opt.argv,
    fs = require('fs'),
    concat = require('concat-stream'),
    xmldom = new (require('xmldom').DOMParser)();

var filename = argv._[0] || '';

var enhanced_geojson = argv.e;
var format = argv.f;

if (format == 'xml') format = 'osm';
if (!format) {
    if (filename.match(/\.osm$/i)) format = 'osm';
    if (filename.match(/\.xml$/i)) format = 'osm';
    if (filename.match(/\.json$/i)) format = 'json';
}

if (['osm','json'].indexOf(format) === -1) {
    process.stderr.write('This doesn\'t look like a recognized file format.\n');
    return opt.showHelp();
}

(argv._.length ? fs.createReadStream(argv._[0]) : process.stdin).pipe(concat(convert));

if (process.stdin.isTTY && !argv._[0]) return opt.showHelp();

function convert(data) {
    if (format == 'osm')
        data = xmldom.parseFromString(data.toString());
    else if (format == 'json')
        data = JSON.parse(data.toString());
    else
        return;
    process.stdout.write(
        JSON.stringify(
            osmtogeojson.toGeojson(
                data,
                {flatProperties: !enhanced_geojson}
            ), null, 4
        )
    );
}