#!/usr/bin/env node

var osmtogeojson = require('./'),
    opt = require('optimist')
        .usage('Usage: $0 [-f format] [-e] FILE')
        .string('f').describe('f', 'file format. if not given, will be detected by filename. supported values: osm, json')
        .boolean('e').describe('e', 'enhanced properties. if set, the resulting GeoJSON feature\'s properties will contain more structured information')
        .boolean('help').describe('help','print this help message'),
    argv = opt.argv,
    fs = require('fs'),
    concat = require('concat-stream'),
    xmldom = new (require('xmldom').DOMParser)();

if (argv.help) {
    return opt.showHelp();
}

var filename = argv._[0] || '';

var enhanced_geojson = argv.e;
var format = argv.f;

if (format === 'xml') format = 'osm';
// detect file format from filename
if (!format) {
    if (filename.match(/\.osm$/i)) format = 'osm';
    if (filename.match(/\.xml$/i)) format = 'osm';
    if (filename.match(/\.json$/i)) format = 'json';
}
// fall back to autodetection if still no format
if (!format) format = 'auto';

(argv._.length ? fs.createReadStream(argv._[0]) : process.stdin).pipe(concat(convert));

function convert(data) {
    if (!data) data = ''; else data = data.toString();
    if (format === 'auto') {
        if (data.match(/^\s*</)) // (osm) xml files begin with a "<"
            format = 'osm';
        else if (data.match(/^\s*{/)) // osm json files begin with a "{"
            format = 'json';
        else {
            format = 'unknown';
        }
    }
    if (format === 'osm')
        data = xmldom.parseFromString(data);
    else if (format === 'json')
        data = JSON.parse(data);
    else {
        process.stderr.write('This doesn\'t look like a recognized file format.\n');
        return opt.showHelp();
    }
    process.stdout.write(
        JSON.stringify(
            osmtogeojson.toGeojson(
                data,
                {flatProperties: !enhanced_geojson}
            ), null, 4
        )
    );
}